//import java.text.FieldPosition
import org.slf4j.LoggerFactory

group 'com.manors.parkview'


buildscript {
    ext {
        springBootVersion = '2.1.4.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath ("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}",
                    'org.slf4j:slf4j-api:1.7.26'
        )
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    archiveBaseName ='SecondJavaProject'
    archiveVersion ='0.1.0-SNAPSHOT'
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile ('org.springframework.boot:spring-boot-starter')
    compile ('org.springframework.boot:spring-boot-starter-web')
    implementation ('org.springframework.boot:spring-boot-starter-thymeleaf')
    implementation ('org.projectlombok:lombok:1.18.6')
    implementation ('org.apache.logging.log4j:log4j-api:2.11.2')
    implementation ('org.apache.logging.log4j:log4j-core:2.11.2')


    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.1.0'
}

ext {
    springVersion = "3.1.0.RELEASE"
    emailNotification = "build@manors.org"
}

sourceSets.all { ext.purpose = null }

sourceSets {
    main {
        purpose = "production"
    }
    test {
        purpose = "test"
    }
    plugin {
        purpose = "production"
    }
}

task printProperties {
    doLast {
        println springVersion
        println emailNotification
        sourceSets.matching { it.purpose == "production" }.each{ println it.name}
    }
}



task configure {
    doLast {
        def pos = new java.text.FieldPosition(10)
            apply from: 'other.gradle', to: pos
            println pos.beginIndex
            println pos.endIndex
    }
}

//configurations.runtime.each { File f -> println f}



def slf4jLogger = LoggerFactory.getLogger('some-logger')
slf4jLogger.lifecycle('This is my explicitly imported slf4j logger, how are {}', 'you?')

dependencies {
    assert delegate == project.dependencies
    testCompile 'junit:junit:4.12'
    delegate.testCompile 'junit:junit:4.12'
}

logger.info('Inside build.gradle file and using logger - This is executed during the configuration phase')
logger.info('A info log message')


task configured {
    println 'Inside build.gradle file - This is also executed during the configuration phase'
}

task testr {
    doLast {
        println 'Inside build.gradle file - This is executed during the execution phase'
    }
}

task whatIsTheBottonLine {
    doFirst {
        println 'Inside build.gradle file - This is executed first during the execution phase'
    }
    doLast {
        println 'Inside build.gradle file - This is executed last during the execution phase'
    }
    println 'Inside build.gradle file - This is executed during the configuration phase as well'
}


